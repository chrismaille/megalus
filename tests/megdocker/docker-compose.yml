version: '2'

services:
  megapp.local:
    container_name: megapp.local
    build: 
      context: ${MEGALUS_PATH}/tests/megapp
      dockerfile: Dockerfile_dev
    volumes:
      - ${MEGALUS_PATH}/tests/megapp:/opt/app
    ports:
      - "8099:80"
    env_file:
      - ${MEGALUS_PATH}/tests/megdocker/docker-env.env
    environment:
      - DJANGO_SETTINGS_MODULE=app.settings
      - APP_NAME=megapp
      - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      - EMAIL_HOST_PASSWORD=$EMAIL_HOST_PASSWORD
      - MIN_COVER=85
      - USERNAME=$USERNAME
      - USEREMAIL=$USEREMAIL
      - USERPASS=$USERPASS
    links:
      - megapp.postgres.local
      - megapp.memcached.local
      - megapp.redis.local

  # ###############################################
  # SERVICE APPS
  # ###############################################
  # Name: Database
  # Type: Database
  # Stack: Postgres
  # Roda o banco de dados principal
  megapp.postgres.local:
    image: onjin/alpine-postgres:latest
    container_name: megapp.postgres.local
    ports:
      - "5499:5432"
    volumes:
      - ${MEGALUS_PATH}/tests/megdocker/components/dbinit/:/docker-entrypoint-initdb.d/
      - postgre-meg-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=megapp
      - POSTGRES_PASSWORD=megapp
      - POSTGRES_DB=megapp_db
  # Name: Memcached
  # Type: Memory Cache
  # Stack: Memcached
  # Roda o cache em memória das aplicações
  megapp.memcached.local:
    container_name: megapp.memcached.local
    image: memcached:1.4.33
    ports:
      - "11299:11211"
  # Name: Redis
  # Type: Broker
  # Stack: Redis
  # Roda o broker para o celery
  megapp.redis.local:
    container_name: megapp.redis.local
    image: redis:3.2.6
    ports:
      - "6399:6379"

volumes:
    postgre-meg-data: